<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elasticsan/elasticsans/{}/volumegroups/{}" version="2021-11-20-preview" swagger="mgmt-plane/elasticsan/ResourceProviders/Microsoft.ElasticSan/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpY1Nhbi9lbGFzdGljU2Fucy97ZWxhc3RpY1Nhbk5hbWV9L3ZvbHVtZWdyb3Vwcy97dm9sdW1lR3JvdXBOYW1lfQ==/V/MjAyMS0xMS0yMC1wcmV2aWV3"/>
  <commandGroup name="elastic-san volume-group">
    <command name="show" version="2021-11-20-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elasticsan/elasticsans/{}/volumegroups/{}" version="2021-11-20-preview" swagger="mgmt-plane/elasticsan/ResourceProviders/Microsoft.ElasticSan/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpY1Nhbi9lbGFzdGljU2Fucy97ZWxhc3RpY1Nhbk5hbWV9L3ZvbHVtZWdyb3Vwcy97dm9sdW1lR3JvdXBOYW1lfQ==/V/MjAyMS0xMS0yMC1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.elasticSanName" options="elastic-san-name e" required="True" idPart="name">
          <help short="The name of the ElasticSan."/>
          <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.volumeGroupName" options="volume-group-name name n" required="True" idPart="child_name_1">
          <help short="The name of the VolumeGroup."/>
          <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="63" minLength="3"/>
        </arg>
      </argGroup>
      <operation operationId="VolumeGroups_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}">
          <request method="get">
            <path>
              <param type="string" name="elasticSanName" arg="$Path.elasticSanName" required="True">
                <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="24" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._]*[0-9A-Za-z]$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
              <param type="string" name="volumeGroupName" arg="$Path.volumeGroupName" required="True">
                <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="63" minLength="3"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-11-20-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ElasticSan/elasticSans/{}/volumegroups/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="encryption">
                      <enum>
                        <item value="&quot;EncryptionAtRestWithPlatformKey&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="networkAcls">
                      <prop type="array<object>" name="virtualNetworkRules">
                        <item type="object">
                          <prop type="string" name="action">
                            <default value="&quot;Allow&quot;"/>
                            <enum>
                              <item value="&quot;Allow&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="id" required="True"/>
                          <prop readOnly="True" type="string" name="state">
                            <enum>
                              <item value="&quot;deprovisioning&quot;"/>
                              <item value="&quot;failed&quot;"/>
                              <item value="&quot;networkSourceDeleted&quot;"/>
                              <item value="&quot;provisioning&quot;"/>
                              <item value="&quot;succeeded&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="protocolType">
                      <enum>
                        <item value="&quot;Iscsi&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Invalid&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2021-11-20-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elasticsan/elasticsans/{}/volumegroups/{}" version="2021-11-20-preview" swagger="mgmt-plane/elasticsan/ResourceProviders/Microsoft.ElasticSan/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpY1Nhbi9lbGFzdGljU2Fucy97ZWxhc3RpY1Nhbk5hbWV9L3ZvbHVtZWdyb3Vwcy97dm9sdW1lR3JvdXBOYW1lfQ==/V/MjAyMS0xMS0yMC1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.elasticSanName" options="elastic-san-name e" required="True" idPart="name">
          <help short="The name of the ElasticSan."/>
          <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.volumeGroupName" options="volume-group-name name n" required="True" idPart="child_name_1">
          <help short="The name of the VolumeGroup."/>
          <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="63" minLength="3"/>
        </arg>
      </argGroup>
      <operation operationId="VolumeGroups_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}">
          <request method="delete">
            <path>
              <param type="string" name="elasticSanName" arg="$Path.elasticSanName" required="True">
                <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="24" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._]*[0-9A-Za-z]$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
              <param type="string" name="volumeGroupName" arg="$Path.volumeGroupName" required="True">
                <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="63" minLength="3"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-11-20-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2021-11-20-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elasticsan/elasticsans/{}/volumegroups/{}" version="2021-11-20-preview" swagger="mgmt-plane/elasticsan/ResourceProviders/Microsoft.ElasticSan/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpY1Nhbi9lbGFzdGljU2Fucy97ZWxhc3RpY1Nhbk5hbWV9L3ZvbHVtZWdyb3Vwcy97dm9sdW1lR3JvdXBOYW1lfQ==/V/MjAyMS0xMS0yMC1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.elasticSanName" options="elastic-san-name e" required="True" idPart="name">
          <help short="The name of the ElasticSan."/>
          <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.volumeGroupName" options="volume-group-name name n" required="True" idPart="child_name_1">
          <help short="The name of the VolumeGroup."/>
          <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="63" minLength="3"/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Azure resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.properties.encryption" options="encryption" group="Properties">
          <help short="Type of encryption"/>
          <enum>
            <item name="EncryptionAtRestWithPlatformKey" value="&quot;EncryptionAtRestWithPlatformKey&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$parameters.properties.networkAcls" options="network-acls" group="Properties">
          <help short="A collection of rules governing the accessibility from specific network locations."/>
          <arg type="array<object>" var="$parameters.properties.networkAcls.virtualNetworkRules" options="virtual-network-rules">
            <help short="The list of virtual network rules."/>
            <item type="object">
              <arg type="string" var="$parameters.properties.networkAcls.virtualNetworkRules[].action" options="action">
                <help short="The action of virtual network rule."/>
                <default value="&quot;Allow&quot;"/>
                <enum>
                  <item name="Allow" value="&quot;Allow&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.networkAcls.virtualNetworkRules[].id" options="id" required="True">
                <help short="Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}."/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="string" var="$parameters.properties.protocolType" options="protocol-type" group="Properties">
          <help short="Type of storage target"/>
          <enum>
            <item name="Iscsi" value="&quot;Iscsi&quot;"/>
            <item name="None" value="&quot;None&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="VolumeGroups_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}">
          <request method="put">
            <path>
              <param type="string" name="elasticSanName" arg="$Path.elasticSanName" required="True">
                <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="24" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._]*[0-9A-Za-z]$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
              <param type="string" name="volumeGroupName" arg="$Path.volumeGroupName" required="True">
                <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="63" minLength="3"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-11-20-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="encryption" arg="$parameters.properties.encryption">
                      <enum>
                        <item value="&quot;EncryptionAtRestWithPlatformKey&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="networkAcls" arg="$parameters.properties.networkAcls">
                      <prop type="array<object>" name="virtualNetworkRules" arg="$parameters.properties.networkAcls.virtualNetworkRules">
                        <item type="object">
                          <prop type="string" name="action" arg="$parameters.properties.networkAcls.virtualNetworkRules[].action">
                            <default value="&quot;Allow&quot;"/>
                            <enum>
                              <item value="&quot;Allow&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="id" arg="$parameters.properties.networkAcls.virtualNetworkRules[].id" required="True"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="protocolType" arg="$parameters.properties.protocolType">
                      <enum>
                        <item value="&quot;Iscsi&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="VolumeGroup_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ElasticSan/elasticSans/{}/volumegroups/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="encryption">
                      <enum>
                        <item value="&quot;EncryptionAtRestWithPlatformKey&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="networkAcls">
                      <prop type="array<object>" name="virtualNetworkRules">
                        <item type="object">
                          <prop type="string" name="action">
                            <default value="&quot;Allow&quot;"/>
                            <enum>
                              <item value="&quot;Allow&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="id" required="True"/>
                          <prop readOnly="True" type="string" name="state">
                            <enum>
                              <item value="&quot;deprovisioning&quot;"/>
                              <item value="&quot;failed&quot;"/>
                              <item value="&quot;networkSourceDeleted&quot;"/>
                              <item value="&quot;provisioning&quot;"/>
                              <item value="&quot;succeeded&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="protocolType">
                      <enum>
                        <item value="&quot;Iscsi&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Invalid&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <body>
              <json var="$Instance">
                <schema type="@VolumeGroup_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2021-11-20-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elasticsan/elasticsans/{}/volumegroups/{}" version="2021-11-20-preview" swagger="mgmt-plane/elasticsan/ResourceProviders/Microsoft.ElasticSan/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpY1Nhbi9lbGFzdGljU2Fucy97ZWxhc3RpY1Nhbk5hbWV9L3ZvbHVtZWdyb3Vwcy97dm9sdW1lR3JvdXBOYW1lfQ==/V/MjAyMS0xMS0yMC1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.elasticSanName" options="elastic-san-name e" required="True" idPart="name">
          <help short="The name of the ElasticSan."/>
          <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.volumeGroupName" options="volume-group-name name n" required="True" idPart="child_name_1">
          <help short="The name of the VolumeGroup."/>
          <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="63" minLength="3"/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Azure resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$parameters.properties.encryption" options="encryption" group="Properties">
          <help short="Type of encryption"/>
          <enum>
            <item name="EncryptionAtRestWithPlatformKey" value="&quot;EncryptionAtRestWithPlatformKey&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.networkAcls" options="network-acls" group="Properties">
          <help short="A collection of rules governing the accessibility from specific network locations."/>
          <arg nullable="True" type="array<object>" var="$parameters.properties.networkAcls.virtualNetworkRules" options="virtual-network-rules">
            <help short="The list of virtual network rules."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$parameters.properties.networkAcls.virtualNetworkRules[].action" options="action">
                <help short="The action of virtual network rule."/>
                <enum>
                  <item name="Allow" value="&quot;Allow&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.networkAcls.virtualNetworkRules[].id" options="id">
                <help short="Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}."/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.protocolType" options="protocol-type" group="Properties">
          <help short="Type of storage target"/>
          <enum>
            <item name="Iscsi" value="&quot;Iscsi&quot;"/>
            <item name="None" value="&quot;None&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="VolumeGroups_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}">
          <request method="get">
            <path>
              <param type="string" name="elasticSanName" arg="$Path.elasticSanName" required="True">
                <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="24" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._]*[0-9A-Za-z]$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
              <param type="string" name="volumeGroupName" arg="$Path.volumeGroupName" required="True">
                <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="63" minLength="3"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-11-20-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="VolumeGroup_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ElasticSan/elasticSans/{}/volumegroups/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="encryption">
                      <enum>
                        <item value="&quot;EncryptionAtRestWithPlatformKey&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="networkAcls">
                      <prop type="array<object>" name="virtualNetworkRules">
                        <item type="object">
                          <prop type="string" name="action">
                            <default value="&quot;Allow&quot;"/>
                            <enum>
                              <item value="&quot;Allow&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="id" required="True"/>
                          <prop readOnly="True" type="string" name="state">
                            <enum>
                              <item value="&quot;deprovisioning&quot;"/>
                              <item value="&quot;failed&quot;"/>
                              <item value="&quot;networkSourceDeleted&quot;"/>
                              <item value="&quot;provisioning&quot;"/>
                              <item value="&quot;succeeded&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="protocolType">
                      <enum>
                        <item value="&quot;Iscsi&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Invalid&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate instance="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="encryption" arg="$parameters.properties.encryption">
                  <enum>
                    <item value="&quot;EncryptionAtRestWithPlatformKey&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="networkAcls" arg="$parameters.properties.networkAcls">
                  <prop type="array<object>" name="virtualNetworkRules" arg="$parameters.properties.networkAcls.virtualNetworkRules">
                    <item type="object">
                      <prop type="string" name="action" arg="$parameters.properties.networkAcls.virtualNetworkRules[].action">
                        <default value="&quot;Allow&quot;"/>
                        <enum>
                          <item value="&quot;Allow&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="id" arg="$parameters.properties.networkAcls.virtualNetworkRules[].id" required="True"/>
                    </item>
                  </prop>
                </prop>
                <prop type="string" name="protocolType" arg="$parameters.properties.protocolType">
                  <enum>
                    <item value="&quot;Iscsi&quot;"/>
                    <item value="&quot;None&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="VolumeGroups_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}">
          <request method="put">
            <path>
              <param type="string" name="elasticSanName" arg="$Path.elasticSanName" required="True">
                <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="24" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._]*[0-9A-Za-z]$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
              <param type="string" name="volumeGroupName" arg="$Path.volumeGroupName" required="True">
                <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="63" minLength="3"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-11-20-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="@VolumeGroup_read"/>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <body>
              <json var="$Instance">
                <schema type="@VolumeGroup_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
