<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.recoveryservices/vaults/{}/replicationprotectionintents" version="2022-08-01" swagger="mgmt-plane/recoveryservicessiterecovery/ResourceProviders/Microsoft.RecoveryServices/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuUmVjb3ZlcnlTZXJ2aWNlcy92YXVsdHMve3Jlc291cmNlTmFtZX0vcmVwbGljYXRpb25Qcm90ZWN0aW9uSW50ZW50cw==/V/MjAyMi0wOC0wMQ=="/>
  <commandGroup name="site-recovery vault protection-intent">
    <command name="list" version="2022-08-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.recoveryservices/vaults/{}/replicationprotectionintents" version="2022-08-01" swagger="mgmt-plane/recoveryservicessiterecovery/ResourceProviders/Microsoft.RecoveryServices/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuUmVjb3ZlcnlTZXJ2aWNlcy92YXVsdHMve3Jlc291cmNlTmFtZX0vcmVwbGljYXRpb25Qcm90ZWN0aW9uSW50ZW50cw==/V/MjAyMi0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True"/>
        <arg type="string" var="$Path.resourceName" options="vault-name" required="True" group="">
          <help short="The name of the recovery services vault."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True"/>
        <arg type="string" var="$Query.skipToken" options="skip-token">
          <help short="The pagination token."/>
        </arg>
        <arg type="string" var="$Query.takeToken" options="take-token">
          <help short="The page size."/>
        </arg>
      </argGroup>
      <operation operationId="ReplicationProtectionIntents_List">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationProtectionIntents">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="resourceName" arg="$Path.resourceName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="string" name="skipToken" arg="$Query.skipToken"/>
              <param type="string" name="takeToken" arg="$Query.takeToken"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-08-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.RecoveryServices/vaults/{}/replicationProtectionIntents/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties">
                        <prop readOnly="True" type="string" name="creationTimeUTC"/>
                        <prop type="string" name="friendlyName"/>
                        <prop readOnly="True" type="boolean" name="isActive"/>
                        <prop readOnly="True" type="string" name="jobId"/>
                        <prop readOnly="True" type="string" name="jobState"/>
                        <prop type="object" name="providerSpecificDetails">
                          <prop type="string" name="instanceType" required="True">
                            <enum>
                              <item value="&quot;A2A&quot;"/>
                            </enum>
                          </prop>
                          <discriminator property="instanceType" value="A2A">
                            <prop type="string" name="agentAutoUpdateStatus">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="autoProtectionOfDataDisk">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="automationAccountArmId"/>
                            <prop type="string" name="automationAccountAuthenticationType">
                              <default value="&quot;RunAsAccount&quot;"/>
                              <enum>
                                <item value="&quot;RunAsAccount&quot;"/>
                                <item value="&quot;SystemAssignedIdentity&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@DiskEncryptionInfo_read" name="diskEncryptionInfo"/>
                            <prop type="string" name="fabricObjectId"/>
                            <prop type="string" name="multiVmGroupId"/>
                            <prop type="string" name="multiVmGroupName"/>
                            <prop type="string" name="primaryLocation"/>
                            <prop type="@StorageAccountCustomDetails_read" name="primaryStagingStorageAccount"/>
                            <prop type="object" name="protectionProfile">
                              <prop type="string" name="resourceType" required="True">
                                <enum>
                                  <item value="&quot;Existing&quot;"/>
                                  <item value="&quot;New&quot;"/>
                                </enum>
                              </prop>
                              <discriminator property="resourceType" value="Existing">
                                <prop type="string" name="protectionProfileId" required="True"/>
                              </discriminator>
                              <discriminator property="resourceType" value="New">
                                <prop type="integer32" name="appConsistentFrequencyInMinutes"/>
                                <prop type="integer32" name="crashConsistentFrequencyInMinutes"/>
                                <prop type="string" name="multiVmSyncStatus" required="True">
                                  <enum>
                                    <item value="&quot;Disable&quot;"/>
                                    <item value="&quot;Enable&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="policyName" required="True"/>
                                <prop type="integer32" name="recoveryPointHistory"/>
                              </discriminator>
                            </prop>
                            <prop type="object" name="recoveryAvailabilitySet">
                              <prop type="string" name="resourceType" required="True">
                                <enum>
                                  <item value="&quot;Existing&quot;"/>
                                </enum>
                              </prop>
                              <discriminator property="resourceType" value="Existing">
                                <prop type="string" name="recoveryAvailabilitySetId"/>
                              </discriminator>
                            </prop>
                            <prop type="string" name="recoveryAvailabilityType" required="True"/>
                            <prop type="string" name="recoveryAvailabilityZone"/>
                            <prop type="@StorageAccountCustomDetails_read" name="recoveryBootDiagStorageAccount"/>
                            <prop type="string" name="recoveryLocation"/>
                            <prop type="object" name="recoveryProximityPlacementGroup">
                              <prop type="string" name="resourceType" required="True">
                                <enum>
                                  <item value="&quot;Existing&quot;"/>
                                </enum>
                              </prop>
                              <discriminator property="resourceType" value="Existing">
                                <prop type="string" name="recoveryProximityPlacementGroupId"/>
                              </discriminator>
                            </prop>
                            <prop type="string" name="recoveryResourceGroupId"/>
                            <prop type="string" name="recoverySubscriptionId"/>
                            <prop type="object" name="recoveryVirtualNetwork">
                              <prop type="string" name="resourceType" required="True">
                                <enum>
                                  <item value="&quot;Existing&quot;"/>
                                  <item value="&quot;New&quot;"/>
                                </enum>
                              </prop>
                              <discriminator property="resourceType" value="Existing">
                                <prop type="string" name="recoverySubnetName"/>
                                <prop type="string" name="recoveryVirtualNetworkId" required="True"/>
                              </discriminator>
                              <discriminator property="resourceType" value="New">
                                <prop type="string" name="recoveryVirtualNetworkName"/>
                                <prop type="string" name="recoveryVirtualNetworkResourceGroupName"/>
                              </discriminator>
                            </prop>
                            <prop type="array<object>" name="vmDisks">
                              <item type="object">
                                <prop type="string" name="diskUri" required="True"/>
                                <prop type="@StorageAccountCustomDetails_read" name="primaryStagingStorageAccountCustomInput"/>
                                <prop type="object" name="recoveryAzureStorageAccountCustomInput" cls="StorageAccountCustomDetails_read">
                                  <prop type="string" name="resourceType" required="True">
                                    <enum>
                                      <item value="&quot;Existing&quot;"/>
                                    </enum>
                                  </prop>
                                  <discriminator property="resourceType" value="Existing">
                                    <prop type="string" name="azureStorageAccountId" required="True"/>
                                  </discriminator>
                                </prop>
                              </item>
                            </prop>
                            <prop type="array<object>" name="vmManagedDisks">
                              <item type="object">
                                <prop type="object" name="diskEncryptionInfo" cls="DiskEncryptionInfo_read">
                                  <prop type="object" name="diskEncryptionKeyInfo">
                                    <prop type="string" name="keyVaultResourceArmId"/>
                                    <prop type="string" name="secretIdentifier"/>
                                  </prop>
                                  <prop type="object" name="keyEncryptionKeyInfo">
                                    <prop type="string" name="keyIdentifier"/>
                                    <prop type="string" name="keyVaultResourceArmId"/>
                                  </prop>
                                </prop>
                                <prop type="string" name="diskId" required="True"/>
                                <prop type="@StorageAccountCustomDetails_read" name="primaryStagingStorageAccountCustomInput"/>
                                <prop type="string" name="recoveryDiskEncryptionSetId"/>
                                <prop type="string" name="recoveryReplicaDiskAccountType"/>
                                <prop type="object" name="recoveryResourceGroupCustomInput">
                                  <prop type="string" name="resourceType" required="True">
                                    <enum>
                                      <item value="&quot;Existing&quot;"/>
                                    </enum>
                                  </prop>
                                  <discriminator property="resourceType" value="Existing">
                                    <prop type="string" name="recoveryResourceGroupId"/>
                                  </discriminator>
                                </prop>
                                <prop type="string" name="recoveryTargetDiskAccountType"/>
                              </item>
                            </prop>
                          </discriminator>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
